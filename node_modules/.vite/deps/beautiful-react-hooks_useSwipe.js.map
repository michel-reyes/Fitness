{
  "version": 3,
  "sources": ["../../beautiful-react-hooks/esm/useSwipe.js", "../../beautiful-react-hooks/esm/shared/swipeUtils.js", "../../beautiful-react-hooks/esm/useEvent.js", "../../beautiful-react-hooks/esm/factory/createHandlerSetter.js", "../../beautiful-react-hooks/esm/shared/safeHasOwnProperty.js", "../../beautiful-react-hooks/esm/useMouseEvents.js", "../../beautiful-react-hooks/esm/useTouchEvents.js"],
  "sourcesContent": ["import { useRef, useState } from 'react';\nimport { getDirection, getHorizontalDirection, getPointerCoordinates, getVerticalDirection } from './shared/swipeUtils';\nimport useMouseEvents from './useMouseEvents';\nimport useTouchEvents from './useTouchEvents';\nconst initialState = { swiping: false, direction: undefined, alphaX: 0, alphaY: 0, count: 0 };\nconst defaultOptions = {\n    direction: 'both',\n    threshold: 10,\n    preventDefault: true,\n    passive: undefined\n};\nconst isEqual = (prev, next) => (prev.swiping === next.swiping &&\n    prev.direction === next.direction &&\n    prev.count === next.count &&\n    prev.alphaX === next.alphaX &&\n    prev.alphaY === next.alphaY);\n/**\n * useSwipe hook\n */\nconst useSwipe = (targetRef = undefined, options = defaultOptions) => {\n    const [state, setState] = useState(initialState);\n    const startingPointRef = useRef([-1, -1]);\n    const isDraggingRef = useRef(false);\n    const opts = Object.assign(Object.assign({}, defaultOptions), (options || {}));\n    const { onMouseDown, onMouseMove, onMouseLeave, onMouseUp } = useMouseEvents(targetRef, opts.passive);\n    const { onTouchStart, onTouchMove, onTouchEnd, onTouchCancel } = useTouchEvents(targetRef, opts.passive);\n    const startSwipe = (event) => {\n        const [clientX, clientY] = getPointerCoordinates(event);\n        startingPointRef.current = [clientX, clientY];\n        if (opts.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n    const continueSwipe = (event) => {\n        const [clientX, clientY] = getPointerCoordinates(event);\n        if (opts.preventDefault) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (isDraggingRef.current || (startingPointRef.current[0] !== -1 && startingPointRef.current[1] !== -1)) {\n            const alpha = [startingPointRef.current[0] - clientX, startingPointRef.current[1] - clientY];\n            if (opts.direction === 'both' && (Math.abs(alpha[0]) > opts.threshold || Math.abs(alpha[1]) > opts.threshold)) {\n                isDraggingRef.current = true;\n                const nextState = {\n                    alphaX: alpha[0],\n                    alphaY: alpha[1],\n                    count: state.count,\n                    swiping: true,\n                    direction: getDirection([clientX, clientY], startingPointRef.current, alpha)\n                };\n                if (!isEqual(nextState, state)) {\n                    setState(nextState);\n                }\n            }\n            if (opts.direction === 'horizontal' && Math.abs(alpha[0]) > opts.threshold) {\n                isDraggingRef.current = true;\n                const nextState = {\n                    alphaX: alpha[0],\n                    alphaY: 0,\n                    count: state.count,\n                    swiping: true,\n                    direction: getHorizontalDirection(alpha[0])\n                };\n                if (!isEqual(nextState, state)) {\n                    setState(nextState);\n                }\n            }\n            if (opts.direction === 'vertical' && Math.abs(alpha[1]) > opts.threshold) {\n                isDraggingRef.current = true;\n                const nextState = {\n                    alphaY: alpha[1],\n                    alphaX: 0,\n                    count: state.count,\n                    swiping: true,\n                    direction: getVerticalDirection(alpha[1])\n                };\n                if (!isEqual(nextState, state)) {\n                    setState(nextState);\n                }\n            }\n        }\n    };\n    const endSwipe = (event) => {\n        if (isDraggingRef.current) {\n            if (opts.preventDefault) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n            setState((prevState) => (Object.assign(Object.assign({}, prevState), { swiping: false, count: state.count + 1 })));\n        }\n        startingPointRef.current = [-1, -1];\n        isDraggingRef.current = false;\n    };\n    onMouseDown(startSwipe);\n    onTouchStart(startSwipe);\n    onMouseMove(continueSwipe);\n    onTouchMove(continueSwipe);\n    onMouseUp(endSwipe);\n    onTouchEnd(endSwipe);\n    onMouseLeave(endSwipe);\n    onTouchCancel(endSwipe);\n    return state;\n};\nexport default useSwipe;\n", "/**\n * Takes a mouse or a touch events and returns clientX and clientY values\n * @param event\n * @return {[undefined, undefined]}\n */\nexport const getPointerCoordinates = (event) => {\n    if (event.touches) {\n        const { clientX, clientY } = event.touches[0];\n        return [clientX, clientY];\n    }\n    const { clientX, clientY } = event;\n    return [clientX, clientY];\n};\nexport const getHorizontalDirection = (alpha) => (alpha < 0 ? 'right' : 'left');\nexport const getVerticalDirection = (alpha) => (alpha < 0 ? 'down' : 'up');\nexport const getDirection = (currentPoint, startingPoint, alpha) => {\n    const alphaX = startingPoint[0] - currentPoint[0];\n    const alphaY = startingPoint[1] - currentPoint[1];\n    if (Math.abs(alphaX) > Math.abs(alphaY)) {\n        return getHorizontalDirection(alpha[0]);\n    }\n    return getVerticalDirection(alpha[1]);\n};\n", "import { useEffect } from 'react';\nimport createHandlerSetter from './factory/createHandlerSetter';\nimport safeHasOwnProperty from './shared/safeHasOwnProperty';\n/**\n * Accepts the reference to an HTML Element and an event name then performs the necessary operations to listen to the event\n * when fired from that HTML Element.\n */\nconst useEvent = (ref, eventName, options) => {\n    const [handler, setHandler] = createHandlerSetter();\n    if (!!ref && !safeHasOwnProperty(ref, 'current')) {\n        throw new Error('Unable to assign any scroll event to the given ref');\n    }\n    useEffect(() => {\n        var _a;\n        const cb = (event) => {\n            if (handler.current) {\n                handler.current(event);\n            }\n        };\n        if (((_a = ref.current) === null || _a === void 0 ? void 0 : _a.addEventListener) && handler.current) {\n            ref.current.addEventListener(eventName, cb, options);\n        }\n        return () => {\n            var _a;\n            if (((_a = ref.current) === null || _a === void 0 ? void 0 : _a.addEventListener) && handler.current) {\n                ref.current.removeEventListener(eventName, cb, options);\n            }\n        };\n    }, [eventName, ref.current, options]);\n    return setHandler;\n};\nexport default useEvent;\n", "import { useRef } from 'react';\n/**\n * Returns an array where the first item is the [ref](https://reactjs.org/docs/hooks-reference.html#useref) to a\n * callback function and the second one is a reference to a function for can change the first ref.\n *\n * Although it looks quite similar to [useState](https://reactjs.org/docs/hooks-reference.html#usestate),\n * in this case the setter just makes sure the given callback is indeed a new function.\n * **Setting a callback ref does not force your component to re-render.**\n *\n * `createHandlerSetter` is meant to be used internally to abstracting other hooks.\n * Don't use this function to abstract hooks outside this library as it changes quite often\n */\nconst createHandlerSetter = (callback) => {\n    const handlerRef = useRef(callback);\n    const setHandler = useRef((nextCallback) => {\n        if (typeof nextCallback !== 'function') {\n            throw new Error('the argument supplied to the \\'setHandler\\' function should be of type function');\n        }\n        handlerRef.current = nextCallback;\n    });\n    return [handlerRef, setHandler.current];\n};\nexport default createHandlerSetter;\n", "const safeHasOwnProperty = (obj, prop) => (obj ? Object.prototype.hasOwnProperty.call(obj, prop) : false);\nexport default safeHasOwnProperty;\n", "import useEvent from './useEvent';\n/**\n * Returns a frozen object of callback setters to handle the mouse events.<br/>\n * It accepts a DOM ref representing the events target. <br/>\n * If a target is not provided the events will be globally attached to the document object.\n * <br/>\n * ### Shall the `useMouseEvents` callbacks replace the standard mouse handler props?\n *\n * **They shall not!**<br />\n * **useMouseEvents is meant to be used to abstract more complex hooks that need to control mouse**, for instance:\n * a drag n drop hook.<br />\n * Using useMouseEvents handlers instead of the classic props approach it's just as bad as it sounds since you'll\n * lose the React SyntheticEvent performance boost.<br />\n * If you were doing something like the following:\n */\nconst useMouseEvents = (targetRef, passive) => {\n    const target = targetRef !== null && targetRef !== void 0 ? targetRef : { current: window.document };\n    const onMouseDown = useEvent(target, 'mousedown', { passive });\n    const onMouseEnter = useEvent(target, 'mouseenter', { passive });\n    const onMouseLeave = useEvent(target, 'mouseleave', { passive });\n    const onMouseMove = useEvent(target, 'mousemove', { passive });\n    const onMouseOut = useEvent(target, 'mouseout', { passive });\n    const onMouseOver = useEvent(target, 'mouseover', { passive });\n    const onMouseUp = useEvent(target, 'mouseup', { passive });\n    return Object.freeze({\n        onMouseDown,\n        onMouseEnter,\n        onMouseLeave,\n        onMouseMove,\n        onMouseOut,\n        onMouseOver,\n        onMouseUp\n    });\n};\nexport default useMouseEvents;\n", "import useEvent from './useEvent';\n/**\n * Returns a frozen object of callback setters to handle the touch events.<br/>\n * It accepts a DOM ref representing the events target. <br/>\n * If a target is not provided the events will be globally attached to the document object.\n * <br/>\n * ### Shall the `useTouchEvents` callbacks replace the standard mouse handler props?\n *\n * **They shall not!**<br />\n * **useTouchEvents is meant to be used to abstract more complex hooks that need to control mouse**, for instance:\n * a drag n drop hook.<br />\n * Using useTouchEvents handlers instead of the classic props approach it's just as bad as it sounds since you'll\n * lose the React SyntheticEvent performance boost.<br />\n * If you were doing something like the following:\n *\n */\nconst useTouchEvents = (targetRef, passive) => {\n    const target = targetRef !== null && targetRef !== void 0 ? targetRef : { current: window.document }; // hackish but works\n    const onTouchStart = useEvent(target, 'touchstart', { passive });\n    const onTouchEnd = useEvent(target, 'touchend', { passive });\n    const onTouchCancel = useEvent(target, 'touchcancel', { passive });\n    const onTouchMove = useEvent(target, 'touchmove', { passive });\n    return Object.freeze({\n        onTouchStart,\n        onTouchEnd,\n        onTouchCancel,\n        onTouchMove\n    });\n};\nexport default useTouchEvents;\n"],
  "mappings": "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",
  "names": ["import_react", "clientX", "clientY", "import_react", "_a"]
}
